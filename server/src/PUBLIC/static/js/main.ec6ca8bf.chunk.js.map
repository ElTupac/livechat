{"version":3,"sources":["Message.js","Chat.js","Handler.js","Login.js","App.js","index.js"],"names":["Message","props","color","chatDe","this","chatOf","info","from","style","background","mess","Component","Chat","mensajes","chat","elementos","map","m","i","Handler","state","socket","undefined","chats","dest","text","creds","name","id","msg","to","send","JSON","stringify","addMessage","WebSocket","onopen","e","console","log","setState","document","getElementById","addEventListener","destinatario","value","texto","enviarMensaje","onmessage","data","me","index","parse","allChats","push","elements","c","type","placeholder","cols","rows","Login","fetch","then","res","json","error","_id","App","setCredentials","bind","ReactDOM","render"],"mappings":"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","file":"static/js/main.ec6ca8bf.chunk.js","sourcesContent":["import {Component} from \"react\";\r\n\r\nclass Message extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const chatDe = this.props.chatOf;\r\n        const info = this.props.info;\r\n        let color;\r\n        if(chatDe == info.from) color = \"#fff\";\r\n        else color = \"#07bc4c\"\r\n        \r\n        return(\r\n            <div>\r\n                <p style={ {background: color} } >{info.mess}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import {Component} from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nclass Chat extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    render(){\r\n        const mensajes = this.props.info.chat;\r\n        const chatDe = this.props.info.chatOf;\r\n        let elementos = mensajes.map((m, i) => {\r\n            return(\r\n                <Message info={m} chatOf={chatDe} key={`${chatDe}-${i}`} />\r\n            );\r\n        });\r\n        \r\n        return(\r\n\r\n            <div>\r\n                <h2>{chatDe}</h2>\r\n                {elementos}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;","import {Component} from \"react\";\r\nimport Chat from \"./Chat\";\r\n\r\nclass Handler extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            socket: undefined,\r\n            chats: []\r\n        }\r\n    }\r\n\r\n    //chats:[\r\n    //  {\r\n    //      chatOf: \"nombre#id\"\r\n    //      chat:[\r\n    //      {\r\n    //        from: \"nombre#id\" de quien manda,\r\n    //          to: \"nombre#id\" de quien recibe,\r\n    //        mess: \"cuerpo del mensaje\" \r\n    //      }, {...}\r\n    //      ]\r\n    //  },{...}\r\n    //]\r\n\r\n    enviarMensaje(dest, text){\r\n        const {name, id} = this.props.creds;\r\n        const msg = {\r\n            from: `${name}#${id}`,\r\n            to: dest,\r\n            mess: text\r\n        }\r\n\r\n        this.state.socket.send(JSON.stringify(msg));\r\n        this.addMessage(JSON.stringify(msg), true);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {name, id} = this.props.creds;\r\n        if(name && id){\r\n            let socket = new WebSocket(`ws://186.13.4.194:4000/?id=${id}&name=${name}`);\r\n            socket.onopen = e => {\r\n                console.log(\"Conectado\");\r\n                this.setState({socket: socket});\r\n                document.getElementById(\"enviar-btn\").addEventListener('click', e => {\r\n                    const destinatario = document.getElementById(\"para\").value;\r\n                    const texto = document.getElementById(\"texto\").value;\r\n\r\n                    if(destinatario && texto) this.enviarMensaje(destinatario, texto);\r\n                });\r\n            }\r\n            socket.onmessage = e => {   //e.data mensaje\r\n                this.addMessage(e.data, false);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    addMessage(msg, me){\r\n        let {from, to, mess} = JSON.parse(msg);\r\n        let allChats = this.state.chats;\r\n        let index;\r\n        for(let i in allChats) if(allChats[i].chatOf == from || allChats[i].chatOf == to){\r\n            index = i;\r\n            break;\r\n        }\r\n        \r\n\r\n        if(index){\r\n            allChats[index].chat.push({from, to, mess});\r\n        }else{\r\n            \r\n            allChats.push({\r\n                chatOf: me ? to : from,\r\n                chat: [\r\n                    {\r\n                        from,\r\n                        to,\r\n                        mess\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        this.setState({chats: allChats});\r\n    }\r\n\r\n    render(){\r\n        const chats = this.state.chats;\r\n        let elements = chats.map(c => {\r\n            return(\r\n                <Chat info={c} key={c.chatOf} />\r\n            );\r\n        })\r\n\r\n\r\n        return(\r\n            <div>\r\n                <input type=\"text\" id=\"para\" placeholder=\"Destinatario\"/>\r\n                <br/>\r\n                <textarea id=\"texto\" cols=\"30\" rows=\"5\" placeholder=\"Mensaje\"></textarea>\r\n                <br/>\r\n                <button id=\"enviar-btn\">Enviar</button>\r\n                <br/>\r\n                {elements}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Handler;","import {Component} from \"react\";\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        document.getElementById(\"crear-btn\").addEventListener('click', e => {\r\n            const name = document.getElementById(\"name\").value;\r\n            if(name){\r\n                fetch(`http://186.13.4.194:4000/newid/${name}`).then(res => res.json())\r\n                .then(res => {\r\n                    if(res.error) console.log(res.error);\r\n                    else this.props.creds(res.creds.name, res.creds._id);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type=\"text\" id=\"name\"/>\r\n                <button id=\"crear-btn\">Crear</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from \"react\";\nimport Handler from \"./Handler\";\nimport Login from \"./Login\"\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      name: undefined,\n      id: undefined\n    }\n\n    this.setCredentials = this.setCredentials.bind(this);\n  }\n\n  setCredentials(name, _id){\n    this.setState({name: name, id: _id});\n  }\n\n  render(){\n    const {name, id} = this.state;\n    if(!name && !id) return <Login creds={this.setCredentials} />;\n    else{\n      const creds = {\n        name: name,\n        id: id\n      }\n      return(\n        <div>\n          <h1>{`${name}#${id}`}</h1>\n          <Handler creds={creds} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}