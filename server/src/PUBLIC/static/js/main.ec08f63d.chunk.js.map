{"version":3,"sources":["Message.js","Chat.js","Handler.js","Login.js","App.js","index.js"],"names":["Message","props","from","chatDe","this","chatOf","info","className","mess","Component","Chat","textArea","document","getElementById","addEventListener","e","key","preventDefault","value","enviarMsg","mensajes","chat","elementos","map","m","i","id","rows","Handler","state","socket","undefined","chats","enviarMensaje","bind","dest","text","creds","name","msg","to","send","JSON","stringify","addMessage","WebSocket","onopen","console","log","setState","destinatario","texto","onmessage","data","me","index","parse","allChats","push","elements","c","type","placeholder","cols","Login","fetch","then","res","json","error","_id","App","setCredentials","ReactDOM","render"],"mappings":"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","file":"static/js/main.ec08f63d.chunk.js","sourcesContent":["import {Component} from \"react\";\r\nimport \"./Message.css\";\r\n\r\nclass Message extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const chatDe = this.props.chatOf;\r\n        const info = this.props.info;\r\n        let from;\r\n        if(chatDe == info.from) from = \"not-me\";\r\n        else from = \"me\"\r\n        \r\n        return(\r\n            <div>\r\n                <p className={`message ${from}`} >{info.mess}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import {Component} from \"react\";\r\nimport Message from \"./Message\";\r\nimport \"./Chat.css\";\r\n\r\nclass Chat extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const textArea = document.getElementById(`${this.props.info.chatOf}-textarea`);\r\n        textArea.addEventListener('keydown', e => {\r\n            if(e.key == \"Enter\"){\r\n                e.preventDefault();\r\n                if(textArea.value != '') {\r\n                    this.props.enviarMsg(this.props.info.chatOf, textArea.value);\r\n                    textArea.value = '';\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const mensajes = this.props.info.chat;\r\n        const chatDe = this.props.info.chatOf;\r\n        let elementos = mensajes.map((m, i) => {\r\n            return(\r\n                <Message info={m} chatOf={chatDe} key={`${chatDe}-${i}`} />\r\n            );\r\n        });\r\n        \r\n        return(\r\n\r\n            <section className=\"chat-section\" >\r\n                <h2 className=\"title\">{chatDe}</h2>\r\n                {elementos}\r\n                <br/>\r\n                <textarea id={`${chatDe}-textarea`} rows=\"3\" className=\"chat-textarea\"></textarea>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;","import {Component} from \"react\";\r\nimport Chat from \"./Chat\";\r\nimport \"./Handler.css\";\r\n\r\nclass Handler extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            socket: undefined,\r\n            chats: []\r\n        }\r\n\r\n        this.enviarMensaje = this.enviarMensaje.bind(this);\r\n    }\r\n\r\n    //chats:[\r\n    //  {\r\n    //      chatOf: \"nombre#id\"\r\n    //      chat:[\r\n    //      {\r\n    //        from: \"nombre#id\" de quien manda,\r\n    //          to: \"nombre#id\" de quien recibe,\r\n    //        mess: \"cuerpo del mensaje\" \r\n    //      }, {...}\r\n    //      ]\r\n    //  },{...}\r\n    //]\r\n\r\n    enviarMensaje(dest, text){\r\n        const {name, id} = this.props.creds;\r\n        const msg = {\r\n            from: `${name}#${id}`,\r\n            to: dest,\r\n            mess: text\r\n        }\r\n\r\n        this.state.socket.send(JSON.stringify(msg));\r\n        this.addMessage(JSON.stringify(msg), true);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {name, id} = this.props.creds;\r\n        if(name && id){\r\n            let socket = new WebSocket(`ws://186.13.4.194:4000/?id=${id}&name=${name}`);\r\n            socket.onopen = e => {\r\n                console.log(\"Conectado\");\r\n                this.setState({socket: socket});\r\n                document.getElementById(\"enviar-btn\").addEventListener('click', e => {\r\n                    const destinatario = document.getElementById(\"para\").value;\r\n                    const texto = document.getElementById(\"texto\").value;\r\n\r\n                    if(destinatario && texto) this.enviarMensaje(destinatario, texto);\r\n                });\r\n            }\r\n            socket.onmessage = e => {   //e.data mensaje\r\n                this.addMessage(e.data, false);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    addMessage(msg, me){\r\n        let {from, to, mess} = JSON.parse(msg);\r\n        let allChats = this.state.chats;\r\n        let index;\r\n        for(let i in allChats) if(allChats[i].chatOf == from || allChats[i].chatOf == to){\r\n            index = i;\r\n            break;\r\n        }\r\n        \r\n\r\n        if(index){\r\n            allChats[index].chat.push({from, to, mess});\r\n        }else{\r\n            \r\n            allChats.push({\r\n                chatOf: me ? to : from,\r\n                chat: [\r\n                    {\r\n                        from,\r\n                        to,\r\n                        mess\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        this.setState({chats: allChats});\r\n    }\r\n\r\n    render(){\r\n        const chats = this.state.chats;\r\n        let elements = chats.map(c => {\r\n            return(\r\n                <Chat info={c} key={c.chatOf} enviarMsg={this.enviarMensaje} />\r\n            );\r\n        })\r\n\r\n\r\n        return(\r\n            <div>\r\n                <input type=\"text\" id=\"para\" placeholder=\"Destinatario\"/>\r\n                <br/>\r\n                <textarea id=\"texto\" cols=\"30\" rows=\"5\" placeholder=\"Mensaje\"></textarea>\r\n                <br/>\r\n                <button id=\"enviar-btn\">Enviar</button>\r\n                <br/>\r\n                <div className=\"chats-container\">\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Handler;","import {Component} from \"react\";\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        document.getElementById(\"crear-btn\").addEventListener('click', e => {\r\n            const name = document.getElementById(\"name\").value;\r\n            if(name){\r\n                fetch(`http://186.13.4.194:4000/newid/${name}`).then(res => res.json())\r\n                .then(res => {\r\n                    if(res.error) console.log(res.error);\r\n                    else this.props.creds(res.creds.name, res.creds._id);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type=\"text\" id=\"name\"/>\r\n                <button id=\"crear-btn\">Crear</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from \"react\";\nimport Handler from \"./Handler\";\nimport Login from \"./Login\"\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      name: undefined,\n      id: undefined\n    }\n\n    this.setCredentials = this.setCredentials.bind(this);\n  }\n\n  setCredentials(name, _id){\n    this.setState({name: name, id: _id});\n  }\n\n  render(){\n    const {name, id} = this.state;\n    if(!name && !id) return <Login creds={this.setCredentials} />;\n    else{\n      const creds = {\n        name: name,\n        id: id\n      }\n      return(\n        <div>\n          <h1>{`${name}#${id}`}</h1>\n          <Handler creds={creds} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}